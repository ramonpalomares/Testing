#pragma checksum "C:\Users\RamónPalomaresGarcía\Source\Repos\AmadeusTest\AmadeusTest\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "015ce216b029dcece0a93da028cfae782b682102"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AmadeusTest.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Index.cshtml", typeof(AmadeusTest.Pages.Pages_Index), null)]
namespace AmadeusTest.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\RamónPalomaresGarcía\Source\Repos\AmadeusTest\AmadeusTest\Pages\_ViewImports.cshtml"
using AmadeusTest;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"015ce216b029dcece0a93da028cfae782b682102", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"21b988bbec523dab5a2cb62bade85c312c52e89a", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\Users\RamónPalomaresGarcía\Source\Repos\AmadeusTest\AmadeusTest\Pages\Index.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
            BeginContext(71, 4408, true);
            WriteLiteral(@"

<script type=""text/javascript"" src=""https://s0.assets-yammer.com/assets/platform_embed.js""></script>
<script type=""text/javascript"" data-app-id=""HUumCg3LbHsZybY5STKFQ"" src=""https://c64.assets-yammer.com/assets/platform_js_sdk.js""></script>
<span id=""yammer-login""></span>
<script>
    yam.connect.loginButton('#yammer-login', function (resp) {
        if (resp.authResponse) {
            document.getElementById('yammer-login').innerHTML = 'Welcome to Yammer!';
        }
    });
</script>

<script>
    var changed = """"
    function ChangeT(val) {
        changed = val;
    }
    function ChangeQuery() {
        var myNode = document.getElementById(""ResultBox"");
        while (myNode.firstChild) {
            myNode.removeChild(myNode.firstChild);
        }
        yam.getLoginStatus(
            function (response) {
                if (response.authResponse) {
                    yam.platform.request({
                        url: ""search.json"",
                        method: ""GE");
            WriteLiteral(@"T"",
                        data: {
                            ""search"": changed,
                            ""page"": ""1"",
                            ""num_per_page"": ""1"",
                            ""search_group"": ""1"",
                        },
                        success: function (data) {
                            SaveResults(data);
                        },
                        error: function (user) {
                            alert(""There was an error with the request."");
                        }
                    });
                }
                else {
                    alert(""not logged in"")
                }
            }
        );
    };
    function SaveResults(data) {
        console.log(data);
        if (data.count.messages > 0) {
            data.messages.messages.forEach(function (Msg) {
                var element = document.createElement(""div"");
                element.className = ""boxing"";
                element.appendChild(document.crea");
            WriteLiteral(@"teTextNode(""Tipo: MENSAJE""))
                element.appendChild(document.createElement(""BR""))
                element.appendChild(document.createTextNode(""Texto: "" + Msg.body.parsed))
                document.getElementById('ResultBox').appendChild(element);
            });
        }

        if (data.count.users > 0) {
            data.users.forEach(function (Usr) {
                var element = document.createElement(""div"");
                element.className = ""boxing"";
                element.appendChild(document.createTextNode(""Tipo: EMAIL""))
                element.appendChild(document.createElement(""BR""))
                element.appendChild(document.createTextNode(""Texto: "" + Usr.email))
                document.getElementById('ResultBox').appendChild(element);
            });
        }
        if (data.count.groups > 0) {
            data.groups.forEach(function (Grp) {
                var element = document.createElement(""div"");
                element.className = ""boxing"";
     ");
            WriteLiteral(@"           element.appendChild(document.createTextNode(""Tipo: GROUPS""))
                element.appendChild(document.createElement(""BR""))
                element.appendChild(document.createTextNode(""Texto: "" + Grp.full_name))
                document.getElementById('ResultBox').appendChild(element);
            });
        }
        if (data.count.uploaded_files > 0) {
            data.uploaded_files.forEach(function (UF) {
                var element = document.createElement(""div"");
                element.className = ""boxing"";
                element.appendChild(document.createTextNode(""Tipo: FILES""))
                element.appendChild(document.createElement(""BR""))
                element.appendChild(document.createTextNode(""Texto: "" + UF.name))
                document.getElementById('ResultBox').appendChild(element);
            });
        }
    }
</script>
<div class=""search-container"">
    <input type=""text"" id=""SearchFor"" placeholder=""Search.."" name=""search"" onchange=""ChangeT(this.");
            WriteLiteral(@"value)"">
    <button type=""button"" onclick=""ChangeQuery()"">Submit</button>
</div>
<div id=""ResultBox""></div>
<style>
    .boxing {
        background-color: orange;
        width: 400px;
        border: 10px grey;
        padding: 25px;
        margin: 25px;
        color: white;
    }
</style>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
